{"version":3,"file":"background.bundle.js","mappings":"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","sources":["webpack://jarvis/./src/background.js"],"sourcesContent":["console.log('chrome.idle:', chrome.idle)\n\nchrome.idle.setDetectionInterval(60)\n\nlet lastActiveTab = null\nlet lastActiveTabTimestamp = null\nlet lastWindowId = null\n\n// checks when the user is active or idle\nchrome.idle.onStateChanged.addListener((newState) => {\n    if (newState === 'active') {\n        chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n            if (tabs.length > 0) {\n                lastActiveTab = tabs[0]\n                lastActiveTabTimestamp = Date.now()\n                lastWindowId = lastActiveTab.windowId\n            }\n        })\n        userActive()\n    } else if (newState === 'idle' || newState === 'locked') {\n       userIdle()\n    }\n})\n\n// checks when the user switches tabs\nchrome.tabs.onActivated.addListener((activeInfo) => {\n    // adds old tab to firebase\n    getActiveTab((tab) => {\n        const url = new URL(tab.url)\n        const websiteName = url.hostname.replace('www.', '')\n        const data = {\n            websiteName,\n            timestamp: Date.now(),\n        }\n        // newTabToFirestore(data)\n    })\n})\n\n// checks when the user switches windows\nchrome.windows.onFocusChanged.addListener((windowID) => {\n    if (windowID === chrome.windows.WINDOW_ID_NONE) {\n        userIdle()\n    } else {\n        userActive()\n    }\n})\n\n\n\nfunction getActiveTab(callback) {\n    chrome.windows.getLastFocused({populate: true}, (window) => {\n        const activeTab = window.tabs.find(tab => tab.active)\n        if (activeTab) callback(activeTab)\n    })\n}\n\nfunction userActive() {\n    chrome.tabs.onActivated.addListener((activeInfo) => {\n        const { tabId, windowId } = activeInfo\n    })\n    // update firestore with new entry\n    getActiveTab((tab) => {\n        const url = new URL(tab.url)\n        const websiteName = url.hostname.replace('www.', '')\n        const data = {\n            websiteName,\n            timestamp: Date.now(),\n        }\n        // sendToFirestore(data)\n    })\n}\n\nfunction userIdle() {\n\n}"],"names":["console","log","chrome","idle","setDetectionInterval","lastActiveTab","lastActiveTabTimestamp","lastWindowId","onStateChanged","addListener","newState","tabs","query","active","currentWindow","length","Date","now","windowId","userActive","userIdle","onActivated","activeInfo","getActiveTab","tab","url","URL","websiteName","hostname","replace","data","timestamp","windows","onFocusChanged","windowID","WINDOW_ID_NONE","callback","getLastFocused","populate","window","activeTab","find","tabId"],"sourceRoot":""}